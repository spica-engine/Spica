name: Spica Continuous Integration Workflow

env:
  # use master later
  base_branch: nx-monorepo

on:
  pull_request:
    # use master later, can't use env here btw
    branches: ["nx-monorepo"]

jobs:
  lint_build_test:
    name: Lint, Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Show disk
        run: df -h

      - name: Free up some space on disk
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Restore Node Modules Cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-modules-

      - name: Restore Nx Cache
        uses: actions/cache@v4
        with:
          path: .nx
          key: ${{ runner.os }}-nx-cache-${{ hashFiles('.nx') }}
          restore-keys: |
            ${{ runner.os }}-nx-cache-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Fetch base branch
        run: git fetch origin ${{ env.base_branch }}:${{ env.base_branch }}

      - name: Check Format
        run: yarn run format:check

      - name: Disable Nx Cloud
        run: echo "NX_NO_CLOUD=true" >> $GITHUB_ENV

      # builds
      # docker images
      # - name: Build API
      #   run: yarn nx build-image api

      # - name: Build Mongo Replication Controller
      #   run: yarn nx build-image mongoreplicationcontroller -t spicaengine/mongoreplicationcontroller:${{ github.sha }}

      # - name: Build Migrate
      #   run: yarn nx build-image migrate

      # npm libraries
      # - name: Build CLI
      #   run: yarn nx build cli

      # - name: Build Devkit Packages
      #   run: |
      #     yarn nx run-many --target build --projects \
      #     api/function/packages/bucket \
      #     api/function/packages/database \
      #     api/function/packages/identity \
      #     api/function/packages/storage

      # # tests
      # # docker images
      # - name: Show disk before tests
      #   run: df -h

      # - name: Activity tests
      #   run: yarn nx run-many -t test --projects api/activity/*

      # - name: Show disk before tests
      #   run: df -h

      # - name: Asset tests
      #   run: yarn nx run-many -t test --projects api/asset/*

      # - name: Show disk before tests
      #   run: df -h

      # - name: Dashboard tests
      #   run: yarn nx run-many -t test --projects api/dashboard/*

      - name: Show disk before tests
        run: df -h

      - name: Show disk usage
        run: sudo du -h --max-depth=1 / | sort -hr

      - name: Passport tests
        run: yarn nx run-many -t test --projects api/passport/*

      - name: Show disk before tests
        run: df -h

      - name: Show disk usage
        run: sudo du -h --max-depth=1 / | sort -hr

      # - name: Preference tests
      #   run: yarn nx run-many -t test --projects api/preference/*

      # - name: Show disk before tests
      #   run: df -h

      # - name: Function tests
      #   run: yarn nx run-many -t test --projects api/function/*

      # - name: Show disk before tests
      #   run: df -h

      # - name: Bucket tests
      #   run: yarn nx run-many -t test --projects api/bucket/*

      # - name: Show disk before tests
      #   run: df -h

      # - name: Test Migrate
      #   run: yarn nx test-image migrate

      # npm libraries
      # - name: Test CLI
      #   run: yarn nx test cli

      # - name: Test Devkit Packages
      #   run: |
      #     yarn nx run-many --target test --projects \
      #     api/function/packages/bucket \
      #     api/function/packages/database \
      #     api/function/packages/identity \
      #     api/function/packages/storage
