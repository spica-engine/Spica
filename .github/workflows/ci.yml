name: Spica CI/CD Workflow

env:
  # use master later
  base_branch: nx-monorepo
  VERSION: ${{ github.sha }}

on:
  pull_request:
    # use master later, can't use env here btw
    branches: ["nx-monorepo"]

jobs:
  container_test:
    name: Run Container Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          [
            api/activity/**,
            api/asset/**,
            api/bucket,
            api/bucket/cache/**,
            api/bucket/common/**,
            api/bucket/expression/**,
            api/bucket/graphql/**,
            api/bucket/history/**,
            api/bucket/hooks/**,
            api/bucket/realtime/**,
            api/bucket/services/**,
            api/dashboard/**,
            api/function,
            api/function/compiler/**,
            api/function/enqueuer/**,
            api/function/log/**,
            api/function/pkgmanager/**,
            api/function/queue/**,
            api/function/runtime/**,
            api/function/scheduler/**,
            api/function/webhook/**,
            api/passport/**,
            api/preference/**,
            api/replication/**,
            api/status/**,
            api/storage/**,
            api/versioncontrol/**,
            core/**,
            database/**,
            filter/**,
            cli/**,
            migrate/**
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Restore Node Modules Cache
        uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Fetch base branch
        run: git fetch origin ${{ env.base_branch }}:${{ env.base_branch }}

      - name: Disable Nx Cloud
        run: echo "NX_NO_CLOUD=true" >> $GITHUB_ENV

      - name: Run Container Tests
        run: yarn run test-image:api --build-arg PROJECTS=${{matrix.project}}
