package(default_visibility = ["//visibility:public"])

load("@npm_cli//@bazel/typescript:index.bzl", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "pkg_npm")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library")

ts_project(
    name = "compile_cli",
    srcs = glob([
        "src/**/*.ts",
        "index.ts",
    ]),
    declaration = True,
    resolve_json_module = True,
    source_map = True,
    tsconfig = "//:tsconfig.json",
    deps = [
        "//packages/interface/asset",
        "//packages/interface/function",
        "@npm_cli//@caporal/core",
        "@npm_cli//@types/dockerode",
        "@npm_cli//@types/json-schema",
        "@npm_cli//@types/node",
        "@npm_cli//@types/semver",
        "@npm_cli//axios",
        "@npm_cli//colorette",
        "@npm_cli//columnify",
        "@npm_cli//cosmiconfig",
        "@npm_cli//dockerode",
        "@npm_cli//dotenv",
        "@npm_cli//get-port",
        "@npm_cli//jsonpath",
        "@npm_cli//open",
        "@npm_cli//ora",
        "@npm_cli//pretty-ms",
        "@npm_cli//semver",
        "@npm_cli//typescript",
        "@npm_cli//yaml",
    ],
)

js_library(
    name = "cli",
    package_name = "@spica/cli",
    deps = [":compile_cli"],
)

nodejs_binary(
    name = "bin",
    data = [
        "bin/spica",
        ":cli",
    ],
    entry_point = "bin/spica",
)

pkg_npm(
    name = "package",
    package_name = "@spica/cli",
    srcs = [
        "bin/spica",
        "package.json",
    ],
    substitutions = {"0.0.0-PLACEHOLDER": "{BUILD_SCM_VERSION}"},
    tags = ["release-with-spica"],
    deps = [
        ":cli",
    ],
)
