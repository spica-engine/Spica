load("//tools/ts_project:index.bzl", "ts_project")

package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "pkg_npm")
load("@npm//@bazel/rollup:index.bzl", "rollup_bundle")

SRCS = glob(["src/*.ts"]) + ["index.ts"]

ts_project(
    name = "database",
    package_name = "@spica-devkit/database",
    srcs = SRCS,
    tsconfig = "//stacks/api/function/packages:tsconfig",
    deps = [
        "@npm//@types/mongodb",
        "@npm//@types/node",
        "@npm//mongodb",
    ],
)

ts_project(
    name = "database_publish",
    package_name = "@spica-devkit/database",
    srcs = SRCS,
    out_dir = "publish",
    tsconfig = "//stacks/api/function/packages:tsconfig_publish",
    deps = [
        "@npm//@types/mongodb",
        "@npm//@types/node",
        "@npm//mongodb",
    ],
)

filegroup(
    name = "types",
    srcs = [":database_publish"],
    output_group = "types",
)

ROLLUP_DEPS = [
    ":database_publish",
    "@npm//@rollup/plugin-json",
    "@npm//@rollup/plugin-commonjs",
    "@npm//@rollup/plugin-node-resolve",
]

rollup_bundle(
    name = "cjs",
    config_file = "//stacks/api/function/packages:rollup.config.js",
    entry_points = {
        "publish/index.ts": "index.js",
    },
    format = "cjs",
    output_dir = True,
    sourcemap = "true",
    deps = ROLLUP_DEPS,
)

rollup_bundle(
    name = "esm",
    config_file = "//stacks/api/function/packages:rollup.config.js",
    entry_points = {
        "publish/index.ts": "index.mjs",
    },
    format = "esm",
    output_dir = True,
    sourcemap = "true",
    deps = ROLLUP_DEPS,
)

genrule(
    name = "bundle",
    srcs = [
        ":esm",
        ":cjs",
        ":types",
    ],
    outs = [
        "dist/index.js",
        "dist/index.js.map",
        "dist/index.mjs",
        "dist/index.mjs.map",
    ] + [
        "dist/%s.d.ts" % (f[:-3])
        for f in SRCS
    ],
    cmd = "cp -r $(locations :cjs)/* $(RULEDIR)/dist && cp -r $(locations :esm)/* $(RULEDIR)/dist && " + "&&".join([
        "cp -r $(GENDIR)/stacks/api/function/packages/database/publish/%s.d.ts $(RULEDIR)/dist/%s.d.ts" % (
            f[:-3],
            f[:-3],
        )
        for f in SRCS
    ]),
)

pkg_npm(
    name = "package",
    package_name = "@spica-devkit/database",
    srcs = [
        "package.json",
        "scripts/postinstall.js",
    ],
    substitutions = {"0.0.0-PLACEHOLDER": "{BUILD_SCM_VERSION}"},
    tags = ["release-with-spica"],
    deps = [
        ":bundle",
        ":database",
    ],
)
