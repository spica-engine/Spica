package(default_visibility = ["//visibility:public"])

load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@npm_bazel_jasmine//:index.bzl", "jasmine_node_test")
load("//tools/dgeni:index.bzl", "docs")

ts_library(
    name = "bucket",
    srcs = [
        "activity.resource.ts",
        "bucket.controller.ts",
        "bucket.module.ts",
        "bucket.schema.resolver.ts",
        "bucket-data.controller.ts",
        "bucket-data.service.ts",
        "cache.ts",
        "index.ts",
        "scheduler.ts",
        "utilities.ts",
    ],
    data = glob(["schemas/*.json"]),
    module_name = "@spica-server/bucket",
    deps = [
        "//packages/core",
        "//packages/core/schema",
        "//packages/database",
        "//stacks/api/activity/services",
        "//stacks/api/bucket/history",
        "//stacks/api/bucket/hooks",
        "//stacks/api/bucket/hooks/proto",
        "//stacks/api/bucket/realtime",
        "//stacks/api/bucket/services",
        "//stacks/api/passport",
        "//stacks/api/preference",
        "//stacks/api/preference/services",
        "@npm//@nestjs/common",
        "@npm//@nestjs/core",
        "@npm//@types/archiver",
        "@npm//@types/json-schema",
        "@npm//@types/mongodb",
        "@npm//@types/node",
        "@npm//archiver",
        "@npm//cron",
        "@npm//locale",
        "@npm//rxjs",
    ],
)

ts_library(
    name = "bucket_data_test_lib",
    testonly = True,
    srcs = [
        "bucket-data.service.spec.ts",
    ],
    deps = [
        ":bucket",
        "//packages/core",
        "//packages/core/schema",
        "//packages/core/testing",
        "//packages/database",
        "//packages/database/testing",
        "//stacks/api/passport/testing",
        "//stacks/api/preference",
        "@npm//@nestjs/common",
        "@npm//@nestjs/testing",
        "@npm//@types/bson",
        "@npm//@types/jasmine",
        "@npm//@types/node",
        "@npm//bson",
    ],
)

jasmine_node_test(
    name = "bucket_data_test",
    deps = [
        ":bucket_data_test_lib",
    ],
)

ts_library(
    name = "bucket_data_acceptance_test_lib",
    testonly = True,
    srcs = [
        "bucket-data.controller.spec.ts",
    ],
    deps = [
        ":bucket",
        "//packages/core",
        "//packages/core/schema",
        "//packages/core/testing",
        "//packages/core/websocket",
        "//packages/database/testing",
        "//stacks/api/bucket/services",
        "//stacks/api/passport/testing",
        "//stacks/api/preference/testing",
        "@npm//@nestjs/common",
        "@npm//@nestjs/testing",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "bucket_data_acceptance_test",
    deps = [
        ":bucket_data_acceptance_test_lib",
    ],
)

ts_library(
    name = "bucket_acceptance_test_lib",
    testonly = True,
    srcs = [
        "bucket.controller.spec.ts",
    ],
    deps = [
        ":bucket",
        "//packages/core",
        "//packages/core/schema",
        "//packages/core/testing",
        "//packages/core/websocket",
        "//packages/database/testing",
        "//stacks/api/passport/testing",
        "//stacks/api/preference/testing",
        "@npm//@nestjs/common",
        "@npm//@nestjs/testing",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "bucket_acceptance_test",
    deps = [
        ":bucket_acceptance_test_lib",
    ],
)

ts_library(
    name = "bucket_schema_resolver_test_lib",
    testonly = True,
    srcs = [
        "bucket.schema.resolver.spec.ts",
    ],
    deps = [
        ":bucket",
        "//packages/core",
        "//packages/core/schema",
        "//packages/core/testing",
        "//packages/database/testing",
        "//stacks/api/bucket/services",
        "//stacks/api/preference/testing",
        "@npm//@nestjs/common",
        "@npm//@nestjs/testing",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "bucket_schema_resolver_test",
    deps = [
        ":bucket_schema_resolver_test_lib",
    ],
)

ts_library(
    name = "scheduler_test_lib",
    testonly = True,
    srcs = [
        "scheduler.spec.ts",
    ],
    deps = [
        ":bucket",
        "//packages/database/testing",
        "//stacks/api/bucket/services",
        "//stacks/api/passport/testing",
        "//stacks/api/preference/testing",
        "@npm//@nestjs/testing",
        "@npm//@types/jasmine",
        "@npm//@types/node",
    ],
)

jasmine_node_test(
    name = "scheduler_test",
    deps = [
        ":scheduler_test_lib",
    ],
)

ts_library(
    name = "bucket_module_test_lib",
    testonly = True,
    srcs = ["bucket.module.spec.ts"],
    deps = [
        ":bucket",
        "//packages/core/schema",
        "//packages/database/testing",
        "//stacks/api/bucket/history",
        "//stacks/api/bucket/hooks",
        "//stacks/api/passport/testing",
        "//stacks/api/preference/testing",
        "@npm//@nestjs/testing",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "bucket_module_test",
    deps = [
        ":bucket_module_test_lib",
    ],
)

ts_library(
    name = "activity_test_lib",
    testonly = True,
    srcs = [
        "activity.resource.spec.ts",
    ],
    deps = [
        "//stacks/api/activity/services",
        "//stacks/api/bucket",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "activity_test",
    deps = [
        "activity_test_lib",
    ],
)

ts_library(
    name = "utilities_test_lib",
    testonly = True,
    srcs = [
        "utilities.spec.ts",
    ],
    deps = [
        "//stacks/api/bucket",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "utilities_test",
    deps = [
        "utilities_test_lib",
    ],
)

docs(
    name = "docs",
    srcs = glob(["**/*.ts"]),
    tags = ["bucket-docs"],
    exports = [
        "BucketController",
        "BucketDataController",
    ],
    deps = [
        "//packages/database",
        "//stacks/api/passport",
    ],
)
