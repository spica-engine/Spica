package(default_visibility = ["//visibility:public"])

load("@npm//@bazel/typescript:index.bzl", "ts_library")
load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

ts_library(
    name = "api",
    srcs = [
        "main.ts",
    ],
    deps = [
        "//packages/core",
        "//packages/core/schema",
        "//packages/core/websocket",
        "//packages/database",
        "//stacks/api/activity",
        "//stacks/api/bucket",
        "//stacks/api/dashboard",
        "//stacks/api/function",
        "//stacks/api/machinery",
        "//stacks/api/passport",
        "//stacks/api/preference",
        "//stacks/api/storage",
        "@npm//@nestjs/common",
        "@npm//@nestjs/core",
        "@npm//@nestjs/platform-express",
        "@npm//@types/express",
        "@npm//@types/node",
        "@npm//@types/yargs",
        "@npm//yargs",
    ],
)

nodejs_binary(
    name = "bin",
    configuration_env_vars = [
        "DATABASE_URI",
        "DATABASE_NAME",
        "REPLICA_SET",
        "PUBLIC_HOST",
        "PERSISTENT_PATH",
        "PORT",
        "FUNCTION_GRPC_ADDRESS",
        "SECRET",
        "DEFAULT_PASSWORD",
        "ENABLE_BUCKET_HOOKS",
        "ENABLE_BUCKET_HISTORY",
        "ENABLE_ACTIVITY_STREAM",
        "FUNCTION_POOL_SIZE",
    ],
    data = [":api"],
    entry_point = "//stacks/api:main.ts",
)

nodejs_image(
    name = "image_base",
    base = "@debian_image//image",
    data = ["//stacks/api"],
    entry_point = "//stacks/api:main.ts",
    layers = [
        "@nodejs_linux_amd64//:bin/npm",
        "@nodejs_linux_amd64//:npm_files",
    ],
    visibility = ["//visibility:private"],
)

container_image(
    name = "image",
    base = ":image_base",
    env = {
        "DEFAULT_PASSWORD": "spica",
        "FUNCTION_GRPC_ADDRESS": "0.0.0.0:5688",
    },
    legacy_run_behavior = False,
    symlinks = {
        "/bin/npm": "/app/stacks/api/image_base.binary.runfiles/nodejs_linux_amd64/bin/npm",
    },
)

container_push(
    name = "push",
    format = "Docker",
    image = ":image",
    registry = "index.docker.io",
    repository = "spicaengine/api",
    tag = "{BUILD_SCM_VERSION}",
    tags = ["release-with-spica"],
)
