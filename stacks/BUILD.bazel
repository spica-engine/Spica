package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

nodejs_binary(
    name = "api_bin",
    configuration_env_vars = [
        "DATABASE_URI",
        "DATABASE_NAME",
        "REPLICA_SET",
        "PUBLIC_HOST",
        "PERSISTENT_PATH",
        "PORT",
    ],
    data = ["//stacks/api"],
    entry_point = "//stacks/api:main.ts",
)

nodejs_image(
    name = "api_image",
    data = ["//stacks/api"],
    entry_point = "//stacks/api:main.ts",
    node_modules = "@npm//:node_modules",
)

container_push(
    name = "api_image_push",
    format = "Docker",
    image = ":api_image",
    registry = "index.docker.io",
    repository = "spicaengine/api",
    tag = "{BUILD_SCM_VERSION}",
    tags = ["release-with-spica"],
)

container_image(
    name = "spica_image",
    base = "@nginx_image//image",
    data_path = ".",
    files = [
        "//:spica",
        "//stacks/spica:nginx.conf",
    ],
    labels = {
        "maintainer": "Spica maintainers <dev@spicaengine.com>",
    },
    legacy_run_behavior = False,
    stamp = True,
    symlinks = {
        "/etc/nginx/nginx.conf": "/spica/nginx.conf",
        "/usr/share/nginx/html": "/dist/spica",
    },
)

container_push(
    name = "spica_image_push",
    format = "Docker",
    image = ":spica_image",
    registry = "index.docker.io",
    repository = "spicaengine/spica",
    tag = "{BUILD_SCM_VERSION}",
    tags = ["release-with-spica"],
)
