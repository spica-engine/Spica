var_1: &api_test_docker_plugin
  plugins:
    - docker#v3.5.0:
        image: "spicaengine/buildkite-node-with-mongodb:12"
        workdir: /spica
        volumes:
          - "/var/cache/spica:/var/cache/spica"
          - "/var/cache/spica/node_modules:/spica/node_modules"
          - "/var/cache/spica/stacks/spica/node_modules:/spica/stacks/spica/node_modules"
          - "/var/cache/spica/stacks/cli/node_modules:/spica/stacks/cli/node_modules"
          - "./.buildkite/bazel.rc:/etc/bazel.bazelrc"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/root/service-account.json:/root/service-account.json"
          - "/root/docker-password:/root/docker-password"

steps:
  - label: ":yarn: Install packages"
    key: "install_packages"
    <<: *api_test_docker_plugin
    commands:
      - yarn config set cache-folder /var/cache/spica/.cache
      - yarn install --frozen-lockfile --network-timeout 1000000


  # - label: ":medical_symbol: Lint"
  #   if: build.branch != "master"
  #   depends_on: "install_packages"
  #   <<: *api_test_docker_plugin
  #   commands:
  #     -  yarn bazel:format -mode=check
  #     -  yarn code:format-check

  # - label: ":docker: + :bazel: Test APIs"
  #   if: build.branch != "master"
  #   depends_on: "install_packages"
  #   <<: *api_test_docker_plugin
  #   commands:
  #     - yarn --silent bazel query 'tests(//...)' --output label | xargs yarn bazel test --test_tag_filters=-flaky,-e2e --config=ci

  # - label: ":docker: + :bazel: Test APIs (Flaky)"
  #   if: build.branch != "master"
  #   depends_on: "install_packages"
  #   <<: *api_test_docker_plugin
  #   commands:
  #     - yarn --silent bazel query 'tests(//...)' --output label | xargs yarn bazel test --test_tag_filters=flaky --flaky_test_attempts=5 --config=ci
  
  # - label: ":docker: + :bazel: Test APIs (E2E)"
  #   if: build.branch != "master"
  #   depends_on: "install_packages"
  #   <<: *api_test_docker_plugin
  #   commands:
  #     - yarn --silent bazel query 'tests(//...)' --output label | xargs yarn bazel test --test_tag_filters=-flaky,e2e --flaky_test_attempts=5 --config=ci

  # - label: ":angular: + :chrome: Test Spica (Chrome)"
  #   if: build.branch != "master"
  #   depends_on: "install_packages"
  #   plugins:
  #       - docker#v3.5.0:
  #           image: "circleci/node:12-browsers"
  #           workdir: /spica
  #           volumes:
  #             - "/var/cache/spica/node_modules:/spica/node_modules"
  #             - "/var/cache/spica/stacks/spica/node_modules:/spica/stacks/spica/node_modules"
  #   commands:
  #     -  cd ./stacks/spica && yarn ng test --browsers=ChromeHeadless --watch=false --progress=false --reporters=spec
 

  - label: ":k8s: Deploy"
    if: build.branch == "buildkite" # TODO: change
    depends_on: "install_packages"
    <<: *api_test_docker_plugin
    commands:
      - |
        gcloud auth activate-service-account --key-file=/root/service-account.json
        gcloud config set project $GCLOUD_PROJECT_ID
        gcloud config set compute/zone $GCLOUD_COMPUTE_ZONE
        gcloud container clusters get-credentials $GCLOUD_CLUSTER_NAME
        
      - cat /root/docker-password | docker login -u "$DOCKER_USERNAME" --password-stdin
      - |
        (cd stacks/spica && yarn ng build --prod --progress=false)
        yarn bazel run deploy.replace -- --config=release -- --force